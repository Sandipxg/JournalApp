------------------------------------------------------------------
------------------------- ResponseEntity -------------------------
------------------------------------------------------------------

ResponseEntity = powerful way to return body + status code + headers in Spring Boot APIs.
Helps avoid always returning 200 OK, which can confuse clients.
Makes APIs RESTful, reliable, and more informative.

⚙️ Why Use ResponseEntity?
    --> Allows custom response per situation (success, not found, error).
    --> Lets you add headers (e.g., pagination, authentication).
    --> Works seamlessly with generic response types (String, Object, DTOs, JSON).
    --> Improves frontend experience (React, Angular, Flutter, etc. can handle status easily).
    --> Encourages cleaner controller code (logic decides status).


====> 🌐 HTTP Status Codes 🌐 <====

✅ 2xx → Success
    --> 200 OK → Standard success. The request worked, and data is returned.
    --> 201 Created → A new resource has been successfully created (e.g., new user added).
    --> 204 No Content → Request successful but no body/data is returned (common for `DELETE`).

⚠️ 3xx → Redirection
    --> 301 Moved Permanently → Resource URL has permanently changed.
    --> 302 Found → Temporary redirection. Client should look at another URL. and also provides temp url for redirection

❌ 4xx → Client Errors
    --> 400 Bad Request → The client sent invalid data (wrong JSON format, missing field, etc.).
    --> 401 Unauthorized → Authentication required or token missing/invalid.
    --> 403 Forbidden → You are authenticated but **not allowed** to access the resource.
    --> 404 Not Found → The resource does not exist (wrong ID, invalid URL).

💥 5xx → Server Errors
    --> 500 Internal Server Error → Unexpected error on the server side (null pointer, DB crash, etc.).
    --> 503 Service Unavailable → Server is temporarily down or overloaded.








